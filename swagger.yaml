openapi: 3.0.0
info:
  title: JobsAPI
  contact: {}
  version: '1.0'
servers:
- url: http://localhost:3000/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: LogIn
      operationId: LogIn
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LogInRequest'
              - example:
                  name: matty
                  email: matty@gmail.com
                  password: user123
            example:
              name: matty
              email: matty@gmail.com
              password: user123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  name: matty
                  email: matty10@gmail.com
                  password: user123
            example:
              name: matty
              email: matty10@gmail.com
              password: user123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get all Jobs
      operationId: GetallJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddJobRequest'
              - example:
                  company: samsung
                  position: intern
                  status: pending
            example:
              company: samsung
              position: intern
              status: pending
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The ID of the job
        schema:
          type: string
    get:
      tags:
      - Jobs
      summary: Get Job
      operationId: GetJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddJobRequest'
              - example:
                  company: samsung
                  position: intern
                  status: pending
            example:
              company: samsung
              position: intern
              status: pending
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    LogInRequest:
      title: LogInRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: matty
        email: matty@gmail.com
        password: user123
    AddJobRequest:
      title: AddJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: samsung
        position: intern
        status: pending
    DeleteJobRequest:
      title: DeleteJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Samsung
        position: backend-developer
    RegisterRequest:
      title: RegisterRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: matty
        email: matty10@gmail.com
        password: user123
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''